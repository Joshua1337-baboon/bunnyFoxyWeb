import pandas as pd
import openpyxl
from openpyxl.styles import PatternFill, Font, Alignment, Border, Side, Color
from openpyxl.formatting.rule import CellIsRule, FormulaRule
from openpyxl.utils import get_column_letter

def get_item_sources():
    return {
        # Кладовая
        'Пастернак': 'Покупается у Пьера, выращивается весной',
        'Зеленая фасоль': 'Покупается у Пьера, выращивается весной',
        'Цветная капуста': 'Покупается у Пьера, выращивается весной',
        'Картофель': 'Покупается у Пьера, выращивается весной',
        'Помидор': 'Покупается у Пьера, выращивается летом',
        'Острый перец': 'Покупается у Пьера, выращивается летом',
        'Черника': 'Покупается у Пьера, выращивается летом',
        'Дыня': 'Покупается у Пьера, выращивается летом',
        'Кукуруза': 'Покупается у Пьера, выращивается летом и осенью',
        'Баклажан': 'Покупается у Пьера, выращивается осенью',
        'Тыква': 'Покупается у Пьера, выращивается осенью',
        'Ямс': 'Покупается у Пьера, выращивается осенью',
        '5 пастернаков золотого качества': 'Выращивается весной, требуется удобрение для качества',
        '5 дынь золотого качества': 'Выращивается летом, требуется удобрение для качества',
        '5 тыкв золотого качества': 'Выращивается осенью, требуется удобрение для качества',
        '5 кукурузы золотого качества': 'Выращивается летом и осенью, требуется удобрение для качества',
        'Большое молоко': 'Дается коровой с высоким уровнем дружбы',
        'Большое коричневое яйцо': 'Дается коричневой курицей с высоким уровнем дружбы',
        'Большое белое яйцо': 'Дается белой курицей с высоким уровнем дружбы',
        'Большое козье молоко': 'Дается козой с высоким уровнем дружбы',
        'Шерсть': 'Дается овцой или кроликом',
        'Утиное яйцо': 'Дается уткой',
        'Трюфельное масло': 'Делается из трюфеля в маслобойне',
        'Ткань': 'Делается из шерсти на ткацком станке',
        'Козий сыр': 'Делается из козьего молока в сыроварне',
        'Сыр': 'Делается из молока в сыроварне',
        'Мед': 'Производится ульем',
        'Желе': 'Делается из фруктов в банке',
        'Яблоко': 'Собирается с яблони осенью',
        'Абрикос': 'Собирается с абрикосового дерева весной',
        'Апельсин': 'Собирается с апельсинового дерева летом',
        'Персик': 'Собирается с персикового дерева летом',
        'Гранат': 'Собирается с гранатового дерева осенью',
        'Вишня': 'Собирается с вишневого дерева весной',
        # Комната искусств
        'Дикий хрен': 'Собирается весной',
        'Нарцисс': 'Собирается весной',
        'Лук-порей': 'Собирается весной',
        'Одуванчик': 'Собирается весной',
        'Виноград': 'Собирается летом',
        'Пряная ягода': 'Собирается летом',
        'Душистый горошек': 'Собирается летом',
        'Обычный гриб': 'Собирается осенью',
        'Дикая слива': 'Собирается осенью',
        'Фундук': 'Собирается осенью',
        'Ежевика': 'Собирается осенью',
        'Зимний корень': 'Собирается зимой',
        'Кристальный фрукт': 'Собирается зимой',
        'Снежный ямс': 'Собирается зимой',
        'Крокус': 'Собирается зимой',
        'Дерево (99)': 'Рубится топором',
        'Камень (99)': 'Добывается киркой',
        'Твердая древесина (10)': 'Добывается из пней и больших пней',
        'Кокос': 'Собирается в пустыне',
        'Кактусовый фрукт': 'Собирается в пустыне',
        'Пещерная морковь': 'Выпадает из камней в шахте',
        'Красный гриб': 'Собирается в грибной пещере или в шахте',
        'Фиолетовый гриб': 'Собирается в грибной пещере или в шахте',
        'Кленовый сироп': 'Собирается с кленового дерева с помощью краника',
        'Дубовая смола': 'Собирается с дуба с помощью краника',
        'Сосновая смола': 'Собирается с сосны с помощью краника',
        'Сморчок': 'Собирается весной в лесу',
        'Лисичка': 'Собирается летом в лесу',
        # Аквариум
        'Солнечник': 'Ловится в реке весной и летом',
        'Сом': 'Ловится в реке весной и осенью, во время дождя',
        'Шэд': 'Ловится в реке весной, летом и осенью, во время дождя',
        'Тигровая форель': 'Ловится в реке осенью и зимой',
        'Большеротый окунь': 'Ловится в озере весной, летом и осенью',
        'Карп': 'Ловится в пруду и секретном лесу',
        'Бычок': 'Ловится в озере весной, летом и осенью',
        'Осетр': 'Ловится в горном озере летом и зимой',
        'Сардина': 'Ловится в океане весной, осенью и зимой',
        'Тунец': 'Ловится в океане летом и зимой',
        'Красный луциан': 'Ловится в океане летом и зимой',
        'Тилапия': 'Ловится в океане летом и осенью',
        'Судак': 'Ловится в реке и озере осенью и зимой',
        'Лещ': 'Ловится в реке весной и осенью, ночью',
        'Угорь': 'Ловится в океане весной и осенью, ночью и во время дождя',
        'Омар': 'Добывается из крабовой ловушки',
        'Раки': 'Добывается из крабовой ловушки',
        'Краб': 'Добывается из крабовой ловушки',
        'Сердцевидка': 'Добывается из крабовой ловушки',
        'Мидия': 'Добывается из крабовой ловушки',
        'Креветка': 'Добывается из крабовой ловушки',
        'Рыба-фугу': 'Ловится в океане летом, во время дождя',
        'Призрачная рыба': 'Ловится в шахте (уровни 20, 60, 100)',
        'Песчаная рыба': 'Ловится в пустыне',
        'Лесной скип': 'Ловится в секретном лесу',
        # Бойлерная
        'Медный слиток': 'Плавится из медной руды в печи',
        'Железный слиток': 'Плавится из железной руды в печи',
        'Золотой слиток': 'Плавится из золотой руды в печи',
        'Кварц': 'Добывается в шахте',
        'Земляной кристалл': 'Добывается в шахте',
        'Замерзшая слеза': 'Добывается в шахте',
        'Огненный кварц': 'Добывается в шахте',
        '99 слизь': 'Выпадает из слаймов',
        '10 крыльев летучей мыши': 'Выпадает из летучих мышей',
        'Солнечная эссенция': 'Выпадает из призрачных монстров',
        'Эссенция пустоты': 'Выпадает из монстров в шахте',
        # Сейф
        '2,500g': 'Просто внесите деньги',
        '5,000g': 'Просто внесите деньги',
        '10,000g': 'Просто внесите деньги',
        '25,000g': 'Просто внесите деньги',
        # Доска объявлений
        'Папоротник': 'Собирается летом в секретном лесу',
        'Трюфель': 'Дается свиньей',
        'Мак': 'Выращивается летом',
        'Маки-ролл': 'Готовится на кухне',
        'Жареное яйцо': 'Готовится на кухне',
        'Морской еж': 'Собирается на пляже',
        'Подсолнух': 'Выращивается летом и осенью',
        'Утиное перо': 'Дается уткой',
        'Аквамарин': 'Добывается в шахте',
        'Красная капуста': 'Выращивается летом',
        'Наутилус': 'Собирается на пляже зимой',
        'Голавль': 'Ловится в реке осенью и зимой',
        'Замороженный жеод': 'Добывается в шахте',
        '10 пшеницы': 'Выращивается летом и осенью',
        '10 сена': 'Косится с травы или покупается у Марни',
        '3 яблока': 'Собирается с яблони осенью',
        'Вино': 'Делается из фруктов в бочке',
        'Кроличья лапка': 'Дается кроликом',
    }

def create_bundle_sheet(wb, sheet_name, bundles):
    ws = wb.create_sheet(sheet_name)
    item_sources = get_item_sources()
    
    # Set column widths
    ws.column_dimensions['A'].width = 30
    ws.column_dimensions['B'].width = 30
    ws.column_dimensions['C'].width = 15
    ws.column_dimensions['D'].width = 40
    
    # Add headers
    headers = ['Название узелка', 'Предмет', 'Выполнено', 'Заметки']
    for col, header in enumerate(headers, 1):
        cell = ws.cell(row=1, column=col)
        cell.value = header
        cell.font = Font(bold=True)
        cell.fill = PatternFill(start_color='CCCCCC', end_color='CCCCCC', fill_type='solid')
        cell.alignment = Alignment(horizontal='center')
    
    # Add bundles
    current_row = 2
    for bundle_name, items in bundles.items():
        # Bundle name
        ws.cell(row=current_row, column=1, value=bundle_name).font = Font(bold=True)
        
        # Add each item on a new row
        for item in items:
            # Item name
            item_cell = ws.cell(row=current_row, column=2, value=item)
            
            # Checkbox for completion
            checkbox_cell = ws.cell(row=current_row, column=3)
            checkbox_cell.value = '□'
            checkbox_cell.alignment = Alignment(horizontal='center')
            
            # Notes column
            note = item_sources.get(item, '')
            ws.cell(row=current_row, column=4, value=note).alignment = Alignment(wrap_text=True, vertical='top')
            
            current_row += 1
        
        # Add a blank row between bundles
        current_row += 1
    
    # Add borders
    thin_border = Border(
        left=Side(style='thin'),
        right=Side(style='thin'),
        top=Side(style='thin'),
        bottom=Side(style='thin')
    )
    
    for row in ws.iter_rows(min_row=1, max_row=current_row-1, min_col=1, max_col=4):
        for cell in row:
            cell.border = thin_border
    
    # Add conditional formatting for completed items
    green_fill = PatternFill(start_color='90EE90', end_color='90EE90', fill_type='solid')
    
    # Format for item cell when checkbox is checked
    for row in range(2, current_row):
        formula = f'=C{row}="☑"'
        ws.conditional_formatting.add(f'B{row}',
            FormulaRule(formula=[formula], fill=green_fill))

def create_main_sheet(wb):
    ws = wb.create_sheet("Главная", 0)
    
    # Set column widths
    ws.column_dimensions['A'].width = 30
    ws.column_dimensions['B'].width = 15
    ws.column_dimensions['C'].width = 40
    
    # Add headers
    headers = ['Комната', 'Прогресс', 'Заметки']
    for col, header in enumerate(headers, 1):
        cell = ws.cell(row=1, column=col)
        cell.value = header
        cell.font = Font(bold=True)
        cell.fill = PatternFill(start_color='CCCCCC', end_color='CCCCCC', fill_type='solid')
        cell.alignment = Alignment(horizontal='center')
    
    # Add rooms
    rooms = [
        'Кладовая',
        'Комната искусств',
        'Аквариум',
        'Бойлерная',
        'Сейф',
        'Доска объявлений'
    ]
    
    for i, room in enumerate(rooms, 2):
        ws.cell(row=i, column=1, value=room).font = Font(bold=True)
        ws.cell(row=i, column=2, value='0%')
        ws.cell(row=i, column=2).alignment = Alignment(horizontal='center')
    
    # Add total progress
    ws.cell(row=len(rooms)+2, column=1, value='Общий прогресс').font = Font(bold=True)
    ws.cell(row=len(rooms)+2, column=2, value='0%')
    ws.cell(row=len(rooms)+2, column=2).alignment = Alignment(horizontal='center')
    
    # Add borders
    thin_border = Border(
        left=Side(style='thin'),
        right=Side(style='thin'),
        top=Side(style='thin'),
        bottom=Side(style='thin')
    )
    
    for row in ws.iter_rows(min_row=1, max_row=len(rooms)+2, min_col=1, max_col=3):
        for cell in row:
            cell.border = thin_border

def main():
    # Create workbook
    wb = openpyxl.Workbook()
    
    # Remove default sheet
    wb.remove(wb.active)
    
    # Define bundles for each room
    pantry_bundles = {
        'Весенний урожай': ['Пастернак', 'Зеленая фасоль', 'Цветная капуста', 'Картофель'],
        'Летний урожай': ['Помидор', 'Острый перец', 'Черника', 'Дыня'],
        'Осенний урожай': ['Кукуруза', 'Баклажан', 'Тыква', 'Ямс'],
        'Качественный урожай': ['5 пастернаков золотого качества', '5 дынь золотого качества', '5 тыкв золотого качества', '5 кукурузы золотого качества'],
        'Животные': ['Большое молоко', 'Большое коричневое яйцо', 'Большое белое яйцо', 'Большое козье молоко', 'Шерсть', 'Утиное яйцо'],
        'Ремесленник': ['Трюфельное масло', 'Ткань', 'Козий сыр', 'Сыр', 'Мед', 'Желе', 'Яблоко', 'Абрикос', 'Апельсин', 'Персик', 'Гранат', 'Вишня']
    }
    
    crafts_room_bundles = {
        'Весенний сбор': ['Дикий хрен', 'Нарцисс', 'Лук-порей', 'Одуванчик'],
        'Летний сбор': ['Виноград', 'Пряная ягода', 'Душистый горошек'],
        'Осенний сбор': ['Обычный гриб', 'Дикая слива', 'Фундук', 'Ежевика'],
        'Зимний сбор': ['Зимний корень', 'Кристальный фрукт', 'Снежный ямс', 'Крокус'],
        'Строительство': ['Дерево (99)', 'Камень (99)', 'Твердая древесина (10)'],
        'Экзотический сбор': ['Кокос', 'Кактусовый фрукт', 'Пещерная морковь', 'Красный гриб', 'Фиолетовый гриб', 'Кленовый сироп', 'Дубовая смола', 'Сосновая смола', 'Сморчок', 'Лисичка']
    }
    
    fish_tank_bundles = {
        'Речная рыба': ['Солнечник', 'Сом', 'Шэд', 'Тигровая форель'],
        'Озерная рыба': ['Большеротый окунь', 'Карп', 'Бычок', 'Осетр'],
        'Морская рыба': ['Сардина', 'Тунец', 'Красный луциан', 'Тилапия'],
        'Ночная рыбалка': ['Судак', 'Лещ', 'Угорь'],
        'Крабовые ловушки': ['Омар', 'Раки', 'Краб', 'Сердцевидка', 'Мидия', 'Креветка'],
        'Особая рыба': ['Рыба-фугу', 'Призрачная рыба', 'Песчаная рыба', 'Лесной скип']
    }
    
    boiler_room_bundles = {
        'Кузнец': ['Медный слиток', 'Железный слиток', 'Золотой слиток'],
        'Геолог': ['Кварц', 'Земляной кристалл', 'Замерзшая слеза', 'Огненный кварц'],
        'Искатель приключений': ['99 слизь', '10 крыльев летучей мыши', 'Солнечная эссенция', 'Эссенция пустоты']
    }
    
    vault_bundles = {
        '2,500g': ['2,500g'],
        '5,000g': ['5,000g'],
        '10,000g': ['10,000g'],
        '25,000g': ['25,000g']
    }
    
    bulletin_board_bundles = {
        'Шеф-повар': ['Кленовый сироп', 'Папоротник', 'Трюфель', 'Мак', 'Маки-ролл', 'Жареное яйцо'],
        'Краситель': ['Красный гриб', 'Морской еж', 'Подсолнух', 'Утиное перо', 'Аквамарин', 'Красная капуста'],
        'Полевые исследования': ['Фиолетовый гриб', 'Наутилус', 'Голавль', 'Замороженный жеод'],
        'Корм': ['10 пшеницы', '10 сена', '3 яблока'],
        'Зачарователь': ['Дубовая смола', 'Вино', 'Кроличья лапка', 'Гранат']
    }
    
    # Create sheets
    create_main_sheet(wb)
    create_bundle_sheet(wb, "Кладовая", pantry_bundles)
    create_bundle_sheet(wb, "Комната искусств", crafts_room_bundles)
    create_bundle_sheet(wb, "Аквариум", fish_tank_bundles)
    create_bundle_sheet(wb, "Бойлерная", boiler_room_bundles)
    create_bundle_sheet(wb, "Сейф", vault_bundles)
    create_bundle_sheet(wb, "Доска объявлений", bulletin_board_bundles)
    
    # Save the workbook
    wb.save('stardew_valley_bundles.xlsx')

if __name__ == "__main__":
    main() 